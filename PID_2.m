clc
clear all
close all
S = [3 7];
G = [10 2];
r = 0.04;
R = 0.12;
phi_0 = pi/6;
d_t = 0.01;

d_L = sqrt((S(1) - G(1))^2 + (S(2) - G(2))^2);
d_x = S(1) - G(1);
d_y = S(2) - G(2);

phi_des = atan2(-(G(2)-S(2)),-(G(1)-S(1)));
d_phi = phi_des - phi_0;
delta_phi = d_phi
Kp = 60;
Kd = 40;
Ki = 2;
integer_omega = 0;
integer_axis = 0;
phi_now = phi_0;
L_now = d_L;
x_now = S(1);
y_now = S(2);
i = 0
while abs(d_L) > 0.01 %если есть ошибка по расстоянию
    figure(1)
        hold on
        plot(x_now,y_now,'o')
        xlim([0 12])
        ylim([0 12])
        Omega = Kp*d_phi+Kd*d_phi*d_t %угловая скорость всей машины для поворота
        if abs(rad2deg(d_phi)) > 0.05 %если угол не совпадает с необходимым
            vl = Omega*3*R %скорость левого и правого колеса с учетом, что
            vr = Omega*R   %машина едет по кругу радиусом R для разворота
            omega_rr = vr/r%угловая скорость вращения колес
            omega_ll = vl/r
            Phi = Omega*d_t%угол, на который машина повернулась
            d_phi = d_phi -  Phi%высчитываем ошибку снова
            phi_now = phi_now + Phi%в каком положении машина находится сейчас
        else
            omega_rr = Kp*d_L+Kd*d_L*d_t %если ошибки по углу нет, то мы 
            omega_ll = Kp*d_L+Kd*d_L*d_t %просто назначаем одинаковую угловую скорость для обоих колес
            vl = omega_ll*r %и едем вперед
            vr = omega_rr*r
        end
        V = (vl+vr)/2 %общая скорость машины ВНЕ зависимости от того, есть ошибка по углу или нет
        
        x = V*cos(phi_now)*d_t % на сколько по оси Х машина проехала
        x_now = x_now - x % на каком положении относительно оси Х машина находится
        
        y = V*sin(phi_now)*d_t % на сколько по оси Y машина проехала
        y_now = y_now - y %на каком положении относительно оси Y машина находится
        
        L = sqrt(x^2+y^2) %Какое расстояние проехала машина
        d_L = d_L - L %Высчитывем снова ошибку по расстоянию
        
        i = i+1 %просто посмотреть, сколько на все расчеты нужно итераций :)
end
            
